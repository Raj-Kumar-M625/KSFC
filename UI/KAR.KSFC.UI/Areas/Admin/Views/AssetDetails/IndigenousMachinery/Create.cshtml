@model KAR.KSFC.Components.Common.Dto.IDM.InspectionOfUnit.IdmDchgIndigenousInspectionDTO
    
@{
    Layout = null;
    var accNumber = ViewBag.LoanAcc;
    var inspectionId = ViewBag.InspectionId;
    var firstinspection = ViewBag.firstindigenousMachine;
     
}  
<div>
    <div>
        <form id="IndigenousMachineryInspectionDetailsAd" asp-action="Create" asp-controller="IndigenousMachineryAd" onsubmit="return JqueryInspectionAddMethod(this,'IndigenousMachinaryAd'); ClearPopupFormsh();">
           <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           <input type="hidden" value="@accNumber" asp-for="LoanAcc" />  
            <input type="hidden" value="@inspectionId" asp-for="Ino" />  
               <input type="hidden" value="@ViewBag.LoanSub" asp-for="LoanSub"/>
    <input type="hidden" value="@ViewBag.OffcCd" asp-for="OffcCd"/>
            @Html.HiddenFor(m => m.Action, new { @class = "form-control"})
            @Html.HiddenFor(m => m.LoanAcc, new { @class = "form-control", value=@ViewBag.AccountNumber })
            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Item No.<span id="spanDet1"> *</span></label></strong>
                    <input type="Number" asp-for="ItemNo" id="ItemNo" class="form-control" min="0" onkeypress="return event.charCode >= 46 && event.charCode <= 57" readonly="readonly" />
                    <span asp-validation-for="ItemNo" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Item Details<span id="spanDet1"> *</span></label></strong>
                    @Html.TextAreaFor(m => m.ItemDetails,  new { @class = "form-control",@maxlength = "200",@id = "ItemDetails" })
                    <span id="spanDet">Max: 200 Characters</span><br />
                    <span asp-validation-for="ItemDetails" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Name of Supplier<span id="spanDet1"> *</span></label></strong>
                    @Html.TextBoxFor(m => m.SupplierName, new { @class = "form-control",@id = "SupplierName",@maxlength=80})
                    <span asp-validation-for="SupplierName" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Address of Supplier<span id="spanDet1"> *</span></label></strong>
                    @Html.TextAreaFor(m => m.SupplierAddress1, new { @class = "form-control",@maxlength = "200",@id = "SupplierAddr"})
                    <span id="spanDet">Max: 200 Characters</span><br />
                    <span asp-validation-for="SupplierAddress1" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Quantity<span id="spanDet1"> *</span></label></strong>
                    <input type="Number" asp-for="Quantity" class="form-control" min="0" id="Quantity" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Basic Cost<span id="spanDet1"> *</span></label></strong>
                    @Html.TextBoxFor(m => m.Cost,"{0:n2}", new { @class = "form-control",required = "required", @onkeypress="return (event.charCode !=8 && event.charCode == 0 || (event.charCode >= 48 && event.charCode <= 57))", @id="BasicCost", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",maxlength="10",@style="text-align:right"})
                    <span asp-validation-for="Cost" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Tax<span id="spanDet1"> *</span></label></strong>
                    <input type="Number" asp-for="Tax" class="form-control" min="0" id="Tax" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required style="text-align:right" />
                    <span asp-validation-for="Tax" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Total Cost(Actual)</label></strong>
                    <input type="Number" asp-for="ActualCost" class="form-control" min="0" id="TotCostActual" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required style="text-align:right" />
                    <span asp-validation-for="ActualCost" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Total Cost<span id="spanDet1"> *</span></label></strong>
                    <input type="Number" asp-for="TotalCost" class="form-control" min="0" id="TotCost" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required sstyle="text-align:right" />
                </div>
            </div>  <br />
            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Machinary Status</label></strong>
                    @Html.DropDownListFor(m => m.MachineryStatus, new SelectList(ViewBag.Machinarystatus, "MacStatus", "MacDets"),"---Select Machinary Status---", new { @class = "form-select",@id="MacStatus"})
                    <span asp-validation-for="MachineryStatus" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Machinary Aquired Status</label></strong>
                    @Html.DropDownListFor(m => m.AquiredStatus, new SelectList(ViewBag.ProcureList, "ProcureId", "ProcureDesc"),"---Select Machinary Aquired Status---", new { @class = "form-select"})
                    <span asp-validation-for="AquiredStatus" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Security Considered for Realease</label></strong>
                    @Html.TextBoxFor(m => m.SecurityRelease, new { @class = "form-control", @id = "SecConsideredforRel" , @style="text-align:right"})
                    <span asp-validation-for="SecurityRelease" class="text-danger"></span>
                </div>
            </div> <br />
            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Total Security Created</label></strong>
                    @Html.TextBoxFor(m => m.SecurityCreated, new { @class = "form-control", @type="number", @id = "SecCreated", @required = "required",onkeydown="return event.keyCode !== 69" ,@style="text-align:right",@readonly=true})
                    <input type="Number" hidden id="SecCreated2" value="@ViewBag.Created" />
                    <span asp-validation-for="SecurityCreated" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Eligibility till Previous Inspection</label></strong>
                    @Html.TextBoxFor(m => m.SecurityEligibility, new { @class = "form-control", @id = "eligibility",@readonly="readonly"})
                    <span asp-validation-for="SecurityEligibility" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Supplier Registered Status </label></strong>
                    @Html.DropDownListFor(m => m.RegisteredState, new List<SelectListItem>()
                    {
                    new SelectListItem(){Text="Yes",Value = "1"},
                    new SelectListItem(){Text="No",Value = "0"}
                    },"---Select Registered Status---", new { @class = "form-select", @id = "RegStat",@required = "required"})
                    <span asp-validation-for="RegisteredState" class="text-danger"></span>
                </div>
            </div>
            <br />
            <div class="row">
                @*<div class="col-md-4">
                <strong><label class="form-label">Acquisition Status(Y/N)<span id="spanDet1"> *</span></label></strong>
                @Html.DropDownListFor(m => m.Status, new List<SelectListItem>()
                {
                new SelectListItem(){Text="Not Acquired",Value = "0"},
                new SelectListItem(){Text="Partially Acquired",Value = "1"},
                new SelectListItem(){Text="Acquired",Value = "2"}
                },"---Select Acquisition Status---", new { @class = "form-select", @id = "AcqStg",@required = "required"})
                <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                <strong><label class="form-label">Acquired Date<span id="spanDet1"> *</span></label></strong>
                @Html.TextBoxFor(m => m.StatusChangedDate, "{0:yyyy-MM-dd}", new { @class = "form-control",@id = "Acqdate", type="date",onkeydown="return false", @readonly = "true", required = "required"})
                <span asp-validation-for="StatusChangedDate" class="text-danger"></span>
                </div>*@
                <div class="col-md-4">
                    <strong><label class="form-label">Requested Date</label></strong>
                    @Html.TextBoxFor(m => m.RequestDate,"{0:yyyy-MM-dd}", new { @class = "form-control",type="date",@id = "RegDate" ,onkeydown="return false" })
                    <span asp-validation-for="RequestDate" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Invoice No</label></strong>
                    <input type="Number" asp-for="InvoiceNo" class="form-control" min="0" id="InvoiceNo" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required />
                    <span asp-validation-for="InvoiceNo" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <strong><label class="form-label">Invoice Date</label></strong>
                    @Html.TextBoxFor(m => m.InvoiceDate,"{0:yyyy-MM-dd}", new { @class = "form-control",type="date", @id = "InvoiceDate",onkeydown="return false" })
                    <span asp-validation-for="InvoiceDate" class="text-danger"></span>
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    <strong><label class="form-label">Delivery (Weeks)</label></strong>
                    <input type="Number" asp-for="Delivery" class="form-control" min="0" id="Delivery(Weeks)" onkeypress="return event.charCode >= 46 && event.charCode <= 57" required />
                    <span asp-validation-for="Delivery" class="text-danger"></span>
                </div>
            </div>
            <br />

            <div @*id="IndigenousMachine" style="display:none;"*@>
                <p><h4>Indigenous Machinery Release Details</h4></p>
                <div class="row">
                    <div class="col-md-4">
                        <strong><label class="form-label">Security Considered For Release</label></strong>
                        @Html.TextBoxFor(m => m.IrPlmcSecAmt , new { @class = "form-control", @id = "secamt",@style="text-align:right", onkeydown="return event.keyCode !== 69", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",maxlength="10"})
                        <span asp-validation-for="IrPlmcSecAmt " class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <strong><label class="form-label">Acquisition Status(Y/N)<span id="spanDet1"> *</span></label></strong>
                        @Html.DropDownListFor(m => m.Status, new List<SelectListItem>()
                        {
                        new SelectListItem(){Text="Not Acquired",Value = "0"},
                        new SelectListItem(){Text="Partially Acquired",Value = "1"},
                        new SelectListItem(){Text="Acquired",Value = "2"}
                        },"---Select Acquisition Status---", new { @class = "form-select", @id = "AcqStg",@required = "required"})
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <strong><label class="form-label">Acquired Date<span id="spanDet1"> *</span></label></strong>
                        @Html.TextBoxFor(m => m.StatusChangedDate, "{0:yyyy-MM-dd}", new { @class = "form-control",@id = "Acqdate", type="date",onkeydown="return false", @readonly = "true", required = "required"})
                        <span asp-validation-for="StatusChangedDate" class="text-danger"></span>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        <strong><label class="form-label">Total Release</label></strong>
                        @Html.TextBoxFor(m => m.IrPlmcTotalRelease, new { @class = "form-control", @type="number",@style="text-align:right", @id = "totalrelease", onkeydown="return event.keyCode !== 69", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",maxlength="10"})
                        <span asp-validation-for="IrPlmcTotalRelease" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <strong><label class="form-label">Actual Value</label></strong>
                        @Html.TextBoxFor(m => m.IrPlmcAamt,"{0:n2}", new { @class = "form-control", @id = "actualvalue",@style="text-align:right" })
                        <span asp-validation-for="IrPlmcAamt" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <strong><label class="form-label">Release Status(%)</label></strong>
                        @* @Html.TextBoxFor(m => m.IrPlmcRelseStat, new { @class = "form-control", @id = "relstat",readOnly="true",@type="number" ,onkeydown="return event.keyCode !== 69",oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",maxlength="3"})
                        <span asp-validation-for="IrPlmcRelseStat" class="text-danger"></span>*@
                        @Html.DropDownListFor(m => m.IrPlmcRelseStat, new List<SelectListItem>()
                        {
                        new SelectListItem(){Text="No Release Yet",Value = "0"},
                        new SelectListItem(){Text="Partially Released",Value = "1"},
                        new SelectListItem(){Text="Fully Released",Value = "2"}
                        },"---Select Release Status---", new { @class = "form-select", @id = "relstat",@required = "required"})
                        <span asp-validation-for="IrPlmcRelseStat" class="text-danger"></span>
                    </div>

                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group">
                    <div class="col-md-2 text-center float-end submit5">
                        <input type="submit" value="Submit" class="btn btn-primary" disabled="disabled" id="submit" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">

    $('input[class="form-control"],select[class="form-select"],textarea[class="form-control"],select[class="form-control"]').change(function () {
        if ($(this).val()) {
            $("input[id='submit']").removeAttr('disabled');
        }
    });

    $("#MacStatus").change(function () {
        debugger
        var furn = $("#SecCreated2").val()
        var MacNo = "@ViewBag.Created"
        if ($("#MacStatus").val() === "3") {
            var sec = ($("#TotCostActual").val())
            var furn = $("#SecCreated2").val()
            var secamt = ($("#secamt").val());
            var total = (Number(furn) + Number(sec))
            $("#SecCreated").val(total)
            var ratio = (secamt / total) * 100;
            //$("#relstat").val(Math.round(ratio));

        } else {
            $("#SecCreated").val(furn)
            var ratio = (secamt / furn) * 100;
            //$("#relstat").val(Math.round(ratio));

        }
    });



    $("#eligibility").val(@ViewBag.Eligibility);

    $(document).ready(function () {
        debugger;
        $("#TotCostActual").on("change", function () {
            debugger
            var sec = ($("#TotCostActual").val())
            var furn = $("#SecCreated2").val()
            var total = (Number(furn) + Number(sec))
            if ($("#MacStatus").val() === "3") {
                $("#SecCreated").val(total)
                var secamt = ($("#secamt").val());
                var ratio = (secamt / total) * 100;
                //$("#relstat").val(Math.round(ratio));

            }

        });

    });


    $("#ItemNo").on("change", function () {
        var ItmNo = $(this).val();
        var ItemNo = @Html.Raw(Json.Serialize(@ViewBag.ItemNumber));
        for (i = 0; i < ItemNo.length; i++) {
            if (ItmNo == ItemNo[i])
                swal.fire({
                    title: 'Item Number already exists',
                    icon: 'warning',

                    confirmButtonText: 'Ok',
                }).then((result) => {
                    $(this).val("");
                })
        }

    });

    $("#AcqStg").change(function () {
        debugger;
        var status = $('#AcqStg :selected').val();
        if (status == 1 || status == 2) {
            //document.getElementById('Acqdate').readOnly = false
            $("#IndigenousMachine").show();
        }
        else {
            $("#AcqStg").click(function () {
                //$("#Acqdate").val("0");
            });
            $("#IndigenousMachine").hide();
            //document.getElementById('Acqdate').readOnly = true
        }
    });

    var maxDate = new Date().toISOString().split('T')[0];
    document.getElementById('Acqdate').value = maxDate




    //debugger;
    //if ('@ViewBag.firstindigenousMachine' == 'True') {
    //    Swal.fire({
    //        title: 'Are you sure Want To Add?',
    //        text: 'Indigenous Machinery Inspection Details is not Added in Previous Inspection',
    //        icon: 'warning',
    //        showCancelButton: true,
    //        confirmButtonText: 'Yes',
    //        cancelButtonText: 'No',
    //    }).then((result) => {
    //        // If the user clicks "Yes"
    //        if (result.isConfirmed) {
    //            // Open the form
    //            $('#IndigenousMachineryInspectionDetails').show();
    //        }
    //        else {
    //            $('#modelIndigenousMachineryInspectionDetails .modal-body').html('');
    //            $('#modelIndigenousMachineryInspectionDetails .modal-title').html('');
    //            $('#modelIndigenousMachineryInspectionDetails').modal('hide');
    //        }
    //    });

    //}

    $("#secamt").on("change", function () {
        debugger;
        var secamt = ($("#secamt").val());
        var indigenous = ($("#SecCreated").val());
        var ratio = (secamt / indigenous) * 100;
        //$("#relstat").val(Math.round(ratio));
    });

    Swal.fire({
        text: "Modification of deed is pending and it needs to be done before the last 10% of the Disbursement.",
        icon: 'warning',
        showDenyButton: true,
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        denyButtonText: "Don't save"
    })


</script>

<script>


    var MacNo = "@ViewBag.Eligibility";
    $("#eligibility").val(MacNo);
    var created = "@ViewBag.Created";
    $("#SecCreated").val(created);
    var release = "@ViewBag.Release";
    $("#secamt").val(release);
    var ratio = (release / created) * 100;
    //$("#relstat").val(Math.round(ratio));




</script>

